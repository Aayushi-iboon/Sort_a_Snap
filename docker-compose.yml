version: "3.8"

services:
  backend:
    container_name: backend
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDPLATFORM: linux/arm64
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    environment:
      - DATABASE_HOST=host.docker.internal
    #   - CELERY_BROKER_URL=redis://redis:6379/0
    #   - CELERY_RESULT_BACKEND=redis://redis:6379/0
    #   - DATABASE_URL=postgresql://facial_user:j#dfkhdbxci12ncdi@host.docker.internal:5432/snap_shot

  celery:
    container_name: celery_worker
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDPLATFORM: linux/arm64
    restart: unless-stopped
    command: python -m celery -A face worker -l INFO --concurrency=2
    volumes:
      - ./static:/app/static
      - ./media:/app/media
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
      - backend
    environment:
      - DATABASE_HOST=host.docker.internal
    #   - CELERY_BROKER_URL=redis://redis:6379/0
    #   - CELERY_RESULT_BACKEND=redis://redis:6379/0
    #   - DATABASE_URL=postgresql://facial_user:j#dfkhdbxci12ncdi@host.docker.internal:5432/snap_shot

  celery-beat:
    container_name: celery_beat
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDPLATFORM: linux/arm64
    restart: unless-stopped
    command: python -m celery -A face beat -l INFO
    depends_on:
      - redis
      - backend
    environment:
      - DATABASE_HOST=host.docker.internal
    #   - CELERY_BROKER_URL=redis://redis:6379/0
    #   - CELERY_RESULT_BACKEND=redis://redis:6379/0
    #   - DATABASE_URL=postgresql://facial_user:j#dfkhdbxci12ncdi@host.docker.internal:5432/snap_shot

  redis:
    container_name: redis
    image: arm64v8/redis:7-alpine
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  frontend-proxy:
    container_name: nginxProxy
    image: arm64v8/nginx:alpine
    ports:
      - "81:80"
      - "444:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
      - ./media:/app/media:ro
      # - /etc/letsencrypt/live/sleeplyfedev.iboon.in/fullchain.pem:/etc/ssl/certs/fullchain.pem
      # - /etc/letsencrypt/live/sleeplyfedev.iboon.in/privkey.pem:/etc/ssl/certs/privkey.pem
    depends_on:
      - backend

volumes:
  redis_data:
